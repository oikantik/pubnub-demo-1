# frozen_string_literal: true
require_relative 'boot'
require 'sequel'

namespace :db do
  desc 'Run migrations'
  task :migrate do
    Sequel.extension :migration
    Sequel::Migrator.run(Chat::DB, File.join(BASE_PATH, 'db', 'migrations'))
  end

  desc 'Create a new migration file'
  task :create_migration, [:name] do |_t, args|
    name = args[:name]
    abort('You must specify a migration name') if name.nil?

    timestamp = Time.now.strftime('%Y%m%d%H%M%S')
    filename = File.join(BASE_PATH, 'db', 'migrations', "#{timestamp}_#{name}.rb")

    File.open(filename, 'w') do |file|
      file.write <<~MIGRATION
        # frozen_string_literal: true
        Sequel.migration do
          up do
            # Add migration code here
          end

          down do
            # Add rollback code here
          end
        end
      MIGRATION
    end
  end
end

namespace :test do
  desc 'Test all API endpoints using the shell script'
  task :api do
    puts "Running API tests..."

    # Make sure the script is executable
    system("chmod +x #{File.join(BASE_PATH, 'test_api.sh')}")

    # Set API host to localhost within the container
    ENV['API_HOST'] = 'http://localhost:9292'

    # Run the test script
    result = system("#{File.join(BASE_PATH, 'test_api.sh')}")

    if result
      puts "API tests completed successfully!"
    else
      abort "API tests failed!"
    end
  end
end
